# -*- coding: utf-8 -*-
"""Iris.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1EmsmZ0uZskUNWfFMlM5RNjcuO6-avs1l
"""

#Importando as bibliotecas a serem usadas

import numpy as np
import pandas as pd

from sklearn.dummy import DummyClassifier
from matplotlib import pyplot as plt
from sklearn.datasets import load_iris
from sklearn.model_selection import train_test_split
from sklearn.tree import DecisionTreeRegressor
from sklearn import tree
from sklearn.metrics import accuracy_score
from sklearn.metrics import recall_score

#Montando modelo de árvore

iris_model = tree.DecisionTreeClassifier(random_state=1)

#Carregando o dataset do Iris

iris = load_iris()
iris_data = pd.DataFrame(iris.data, columns = iris.feature_names)
iris_data.head()

#Definindo valores do X(as caracteristicas) e do y(os tipos de flores)

X = iris.data
y = iris.target

#Definindo os dados de treino e de teste

X_train, X_test, y_train, y_test = train_test_split(X,y,random_state=1)

#Dando fit nos dados

iris_model = isis_model.fit(X_train, y_train)

#Dando predict nos dados do fit

train_predict = isis_model.predict(X_test)

#Calculando a acurácia junto com o recall

acuracia = accuracy_score(y_test, train_predict)

recall = recall_score(y_test, train_predict, average='macro')

print(f"Acurácia do modelo de %{acuracia} e recall de %{recall}")

#Calculando a % de acurácia pelo DummyClassifier, assim teremos uma noção se o modelo está bom ou não

dummy = DummyClassifier()

dummy.fit(X_train, y_train)
resultado1 = dummy.predict(X_test)

acuracia_dummy = accuracy_score(y_test, resultado1)
print(f"Acurácia com teste de validação é de %{acuracia_dummy}")

"""Como a acurácia e o recall são superiores ao teste feito com o Dummy, conseguimos concluir que o modelo está ótimo para verificação dos dados."""